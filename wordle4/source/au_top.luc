module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    input usb_rx,           // USB->Serial input
    
    // keyboard inputs
    input b_in,
    input e_in,
    input a_in,
    input r_in,
    
    output outmatrix1,
    output outmatrix2,
    output outmatrix3,
    output outmatrix4,
    output io_led[3][8],
    output usb_tx
  ) {
  
  sig rst; // reset signal
  
  .clk(clk) {
    reset_conditioner reset_cond;
    .rst(rst) {
      beta betaCPU;
      buttons_controller keyboard_controller(
        .b(b_in),
        .e(e_in),
        .a(a_in),
        .r(r_in)
      );
    }
    
    dff button_debugger[5];
  }
  
  always {
    reset_cond.in = ~rst_n;
    rst = reset_cond.out;
    io_led = 3x{{8h00}};
    
    betaCPU.keyboard_input = keyboard_controller.out;
    betaCPU.has_keyboard_input = keyboard_controller.is_pressed;
    
    
    io_led[0][7:0] = betaCPU.debugger;
    
    
    outmatrix1= betaCPU.out_bottom_matrix1;
    outmatrix2 = betaCPU.out_bottom_matrix2;
    outmatrix3 = betaCPU.out_bottom_matrix3;
    outmatrix4 = betaCPU.out_bottom_matrix4;
    
    usb_tx = usb_rx;        // loop serial port
  }
}