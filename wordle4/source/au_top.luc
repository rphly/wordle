module au_top (
    input clk,  // clock
    input rst_n,  // reset
    
    input usb_rx,
    
    input alphabet[2],
   
    
    input recall_button[4],
    
    input clear,
    input check_button,
    
    output top_display1,
    output bot_display1,

    output io_led[3][8],
    output alphabet_is_pressed,
    output usb_tx
    
    
    

  ) {
  
    sig rst; // reset signal
  
    .clk(clk) {
  
    reset_conditioner reset_cond;
    
    .rst(rst) {
      game_beta_backup betaCPU;
      
      //buttons_controller button_control(.alphabet_input(alphabet))
      
      //panel_controller button_panel_controller(
        //.clear(clear_in)
      //);
    }
  }
  

  always {
  
    alphabet_is_pressed = 0;
    reset_cond.in = ~rst_n;
    rst = reset_cond.out;    // conditioned reset 
    
    usb_tx = usb_rx;        // loop serial port
    
    io_led = 3x{{8h0}};

    
    // init betaCPU
    betaCPU.recall = recall_button;
    betaCPU.clear = clear;
    betaCPU.alphabet_button = alphabet;    // pass button pressed into 
    betaCPU.check_button = check_button;
    
    if(alphabet){
      betaCPU.is_pressed = 1;
    }else{
    betaCPU.is_pressed=0;
    }
    
    
    // connect led display outputs
    top_display1 = betaCPU.display_top[0];  // pass the 5 bit encoding to the first top display 
    bot_display1 = betaCPU.display_bot[0]; 
    

    
    
  }
  
  
}
