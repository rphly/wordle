module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    input usb_rx,           // USB->Serial input
    
    // keyboard inputs
    input a_in,
    input b_in,
    input c_in,
    
    input clear_in,
    input check_in,
    
    output outmatrix0,
    output io_led[3][8],
    output usb_tx
  ) {
  
  sig rst; // reset signal
  
  .clk(clk) {
    reset_conditioner reset_cond;
    .rst(rst) {
      beta betaCPU;
      buttons_controller keyboard_controller(
        .a(a_in)
      );
      
      panel_controller button_panel_controller(
        .clear(clear_in),
        .check(check_in)
      );
    }
  }
  
  led_strip_writer led_strip(#PIXEL_COUNT(25), .clk(clk), .rst(rst));
  white_alphabets letters;
  
  always {
    reset_cond.in = ~rst_n;
    rst = reset_cond.out;
    io_led = 3x{{8h00}};
    
    betaCPU.keyboard_input = keyboard_controller.out;
    betaCPU.has_keyboard_input = keyboard_controller.is_pressed;
    betaCPU.panel_input = button_panel_controller.out;
    betaCPU.has_panel_input = button_panel_controller.is_pressed;
    
    letters.selector = betaCPU.which_letter;
    led_strip.update=1;
    led_strip.color=letters.out[led_strip.pixel]; 
    outmatrix0=led_strip.led;
    
    usb_tx = usb_rx;        // loop serial port
  }
}