module game_beta_backup (
    input clk,  // clock
    input rst,  // reset
    

    input recall1,
    input recall2,
    input recall3,
    input recall4,
    
    input check_button,
    input alphabet_button,
    input clear, 
    
    
    output display_top[4][16],
    output display_bot[4][16]
    
    
  ) {
  
  
  // instantiate alu (not that we're gonna use it anyways lol)
  
  alu alu;
  
  .clk(clk) {
    
    .rst(rst) {
      
      regfile_backup regfile;    // instantiate regfile
      
      fsm_backup state;    // instantiate fsm

    }
  }
  
  

  always {
  
    
    // init alu
    alu.alufn = state.alufn;
    alu.a = state.ra_write;
    alu.b = state.rb_write;
  
    
    // init regfile
  
    regfile.data =  state.ra_write; // link datain of regfile to ra_write of fsm
    regfile.write_address = state.write_address;
    regfile.we = state.we;
    regfile.read_address_a = state.ra_address; // fetch read address from fsm
    regfile.read_address_b = state.rb_address;
    
    state.ra_read = regfile.out_a;  // feed data back to fsm
    state.rb_read = regfile.out_b;  // feed data back to fsm
    
    // hardcode regfile to update recall counter
    
    
    
    
    // init fsm
    state.recall1 = recall1;
    state.recall2 = recall2;
    state.recall3 = recall3;
    state.recall4 = recall4;
    state.check_ans_pressed = check_button;
    state.alphabet_pressed = alphabet_button;
    state.clear = clear;
        
    // init displays
    display_top = regfile.display_top;
    display_bot = regfile.display_bot;
    
    
    // this is where asel and bsel comes in if we need them
    

    
  }
  

  

