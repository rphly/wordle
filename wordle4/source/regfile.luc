module regfile (
    input clk,  // clock
    input rst,  // reset
    input write_address[16], // write address
    input we, // write enable
    input data[16], // data in
    
    
    input read_address_a[8], //address port a 
    input read_address_b[8], //address port b
    output out_a[16], //read port a
    output out_b[16] //read port b

  ) 

{
  .clk(clk){
    .rst(rst){
    
      // total 16 * 16 bits = 256 bits
    
      // 28 bits
      dff guess_1_letter_1[7];
      dff guess_1_letter_2[7];
      dff guess_1_letter_3[7];
      dff guess_1_letter_4[7];
      
      // 28 bits
      dff guess_2_letter_1[7];
      dff guess_2_letter_2[7];
      dff guess_2_letter_3[7];
      dff guess_2_letter_4[7];
      
      // 28 bits
      dff guess_3_letter_1[7];
      dff guess_3_letter_2[7];
      dff guess_3_letter_3[7];
      dff guess_3_letter_4[7];
      
      // 28 bits
      dff guess_4_letter_1[7];
      dff guess_4_letter_2[7];
      dff guess_4_letter_3[7];
      dff guess_4_letter_4[7];
      
      // 20 bits
      dff input_letter_1[5];
      dff input_letter_2[5];
      dff input_letter_3[5];
      dff input_letter_4[5];
      
      // 20 bits
      dff correct_letter_1[5];
      dff correct_letter_2[5];
      dff correct_letter_3[5];
      dff correct_letter_4[5];
      
      // 10 bits
      dff input_i[5];
      dff correct_k[5];
      
      // 9+2 bits
      dff i[3];
      dff j[3];
      dff k[3];
      dff input_ctr[2];
      
      // 3 bits
      dff num_correct[3];
      
      // 1 bit
      dff zero[1];
      
      // 1 bit
      dff g[3];
      
      // address so 6 bit MAX
      dff temp_guess_g_letter_i[7];
      
      // 7 bits
      dff temp_coloured_letter[7];
      
      // 11 bits
      dff word_index[11];
      
      // 1 bit
      dff oka_mode[1];
    }
  }

  always {
  
    //write port
    if (we){
      case(write_address){
        b1000000 : guess_1_letter_1.d = data;
        b1000001 : guess_1_letter_2.d = data;
        b1000010 : guess_1_letter_3.d = data;
        b1000011 : guess_1_letter_4.d = data;
        
        b00100 : guess_2_letter_1.d = data;
        b00101 : guess_2_letter_2.d = data;
        b00110 : guess_2_letter_3.d = data;
        b00111 : guess_2_letter_4.d = data;
        
        b01000 : guess_3_letter_1.d = data;
        b01001 : guess_3_letter_2.d = data;
        b01010 : guess_3_letter_3.d = data;
        b01011 : guess_3_letter_4.d = data;
        
        b01100 : guess_4_letter_1.d = data;
        b01101 : guess_4_letter_2.d = data;
        b01110 : guess_4_letter_3.d = data;
        b01111 : guess_4_letter_4.d = data;
        
        b10000 : input_letter_1.d = data;
        b10001 : input_letter_2.d = data;
        b10010 : input_letter_3.d = data;
        b10011 : input_letter_4.d = data;
        
        b10100 : i.d = data;
        b10101 : j.d = data;
        b10110 : k.d = data;
        
        b10111 : correct_letter_1.d = data;
        b11000 : correct_letter_2.d = data;
        b11001 : correct_letter_3.d = data;
        b11010: correct_letter_4.d = data;
        
        b11011 : num_correct.d = data;
        b11100 : input_ctr.d = data;
        b11101 : input_i.d = data;
        b11110 : correct_k.d = data;
        b11111 : zero.d = 0;
        b100000 : g.d = data;
        b100001 : temp_guess_g_letter_i.d = data;
        b100010 : temp_coloured_letter.d = data;
        b100011 : word_index.d = data;
        b100100 : oka_mode.d = data;
      }
    }
    
      
    //read port a
    case(read_address_a){
        b1000000 : out_a = guess_1_letter_1.q;
        b1000001 : out_a = guess_1_letter_2.q;
        b1000010 : out_a = guess_1_letter_3.q;
        b1000011 : out_a = guess_1_letter_4.q;
        
        b00100 : out_a = guess_2_letter_1.q;
        b00101 : out_a = guess_2_letter_2.q;
        b00110 : out_a = guess_2_letter_3.q;
        b00111 : out_a = guess_2_letter_4.q;
        
        b01000 : out_a = guess_3_letter_1.q;
        b01001 : out_a = guess_3_letter_2.q;
        b01010 : out_a = guess_3_letter_3.q;
        b01011 : out_a = guess_3_letter_4.q;
        
        b01100 : out_a = guess_4_letter_1.q;
        b01101 : out_a = guess_4_letter_2.q;
        b01110 : out_a = guess_4_letter_3.q;
        b01111 : out_a = guess_4_letter_4.q;
        
        b10000 : out_a = input_letter_1.q;
        b10001 : out_a = input_letter_2.q;
        b10010 : out_a = input_letter_3.q;
        b10011 : out_a = input_letter_4.q;
        
        b10100 : out_a = i.q;
        b10101 : out_a = j.q;
        b10110 : out_a = k.q;
        
        b10111 : out_a = correct_letter_1.q;
        b11000 : out_a = correct_letter_2.q;
        b11001 : out_a = correct_letter_3.q;
        b11010 : out_a = correct_letter_4.q;
        
        b11011 : out_a = num_correct.q;
        b11100 : out_a = input_ctr.q;
        b11101 : out_a = input_i.q;
        b11110 : out_a = correct_k.q;
        b11111 : out_a = zero.q;
      
        b100000 : out_a = g.q;
        b100001 : out_a = temp_guess_g_letter_i.q;
        b100010 : out_a = temp_coloured_letter.q;
        b100011 : out_a = word_index.q;
        b100100 : out_a = oka_mode.q;
        default : out_a = zero.q;
    }
    
    //read port b
    case(read_address_b){
        b1000000 : out_b = guess_1_letter_1.q;
        b1000001 : out_b = guess_1_letter_2.q;
        b1000010 : out_b = guess_1_letter_3.q;
        b1000011 : out_b = guess_1_letter_4.q;
    
        b00100 : out_b = guess_2_letter_1.q;
        b00101 : out_b = guess_2_letter_2.q;
        b00110 : out_b = guess_2_letter_3.q;
        b00111 : out_b = guess_2_letter_4.q;
    
        b01000 : out_b = guess_3_letter_1.q;
        b01001 : out_b = guess_3_letter_2.q;
        b01010 : out_b = guess_3_letter_3.q;
        b01011 : out_b = guess_3_letter_4.q;
    
        b01100 : out_b = guess_4_letter_1.q;
        b01101 : out_b = guess_4_letter_2.q;
        b01110 : out_b = guess_4_letter_3.q;
        b01111 : out_b = guess_4_letter_4.q;
    
        b10000 : out_b = input_letter_1.q;
        b10001 : out_b = input_letter_2.q;
        b10010 : out_b = input_letter_3.q;
        b10011 : out_b = input_letter_4.q;
        
        b10100 : out_b = i.q;
        b10101 : out_b = j.q;
        b10110 : out_b = k.q;
    
        b10111 : out_b = correct_letter_1.q;
        b11000 : out_b = correct_letter_2.q;
        b11001 : out_b = correct_letter_3.q;
        b11010 : out_b = correct_letter_4.q;
    
        b11011 : out_b = num_correct.q;
        b11100 : out_b = input_ctr.q;
        b11101 : out_b = input_i.q;
        b11110 : out_b = correct_k.q;
        b11111 : out_b = zero.q;
       
        b100000 : out_b = g.q;
        b100001 : out_b = temp_guess_g_letter_i.q;
        b100010 : out_b = temp_coloured_letter.q;
        b100011 : out_b = word_index.q;
        b100100 : out_b = oka_mode.q;
        default : out_b = zero.q;
    }
  }
}