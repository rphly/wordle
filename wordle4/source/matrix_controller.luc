module matrix_controller (
    input clk,  // clock
    input rst,  // reset
    input update[4],
    
    input matrix1_letter_index[7],
    input matrix2_letter_index[7],
    input matrix3_letter_index[7],
    input matrix4_letter_index[7],
    input correct_word[4][5],
    output outmatrix1,
    output outmatrix2,
    output outmatrix3,
    output outmatrix4
  ) {
  
  .clk(clk){
    dff matrix1_letter_index_dff[7];
    dff matrix2_letter_index_dff[7];
    dff matrix3_letter_index_dff[7];
    dff matrix4_letter_index_dff[7];
    .rst(rst){
      matrix matrix1;
      matrix matrix2;
      matrix matrix3;
      matrix matrix4;
    }
  }

  always {
    
    outmatrix1 = matrix1.data_out;
    outmatrix2 = matrix2.data_out;
    outmatrix3 = matrix3.data_out;
    outmatrix4 = matrix4.data_out;
       
    matrix1.letter_index = matrix1_letter_index_dff.q;
    matrix2.letter_index = matrix2_letter_index_dff.q;
    matrix3.letter_index = matrix3_letter_index_dff.q;
    matrix4.letter_index = matrix4_letter_index_dff.q;
    
    case(update){
      3b1:
        matrix1_letter_index_dff.d = matrix1_letter_index;
      3b10: 
        matrix2_letter_index_dff.d = matrix2_letter_index;
      3b11: 
        matrix3_letter_index_dff.d = matrix3_letter_index;
      3b100:
        matrix4_letter_index_dff.d = matrix4_letter_index;
      3b101:
        matrix1_letter_index_dff.d = 5b0;
        matrix2_letter_index_dff.d = 5b0;
        matrix3_letter_index_dff.d = 5b0;
        matrix4_letter_index_dff.d = 5b0;

      3b110: // show correct word
        matrix1_letter_index_dff.d = correct_word[0];
        matrix2_letter_index_dff.d = correct_word[1];
        matrix3_letter_index_dff.d = correct_word[2];
        matrix4_letter_index_dff.d = correct_word[3];

      3b111: // lose
        matrix1_letter_index_dff.d = b1001100;
        matrix2_letter_index_dff.d = b1001111;
        matrix3_letter_index_dff.d = b1010011;
        matrix4_letter_index_dff.d = b1000101;
      
      4b1000: // win
        matrix1_letter_index_dff.d = b0110111;
        matrix2_letter_index_dff.d = b0101001;
        matrix3_letter_index_dff.d = b0101110;
        matrix4_letter_index_dff.d = b0100000;
      
      4b1001: // TYPE
        matrix1_letter_index_dff.d = b10100;
        matrix2_letter_index_dff.d = b11001;
        matrix3_letter_index_dff.d = b10000;
        matrix4_letter_index_dff.d = b00101;
        
      4b1010: // HERE
        matrix1_letter_index_dff.d = b01000;
        matrix2_letter_index_dff.d = b00101;
        matrix3_letter_index_dff.d = b10010;
        matrix4_letter_index_dff.d = b00101;
      
      4b1100: // update first 2 martices
        matrix1_letter_index_dff.d = matrix1_letter_index; 
        matrix2_letter_index_dff.d = matrix2_letter_index;
        
      4b1110: // update last 2 matrices 
        matrix3_letter_index_dff.d = matrix3_letter_index; 
        matrix4_letter_index_dff.d = matrix4_letter_index;
      
      4b1111: // debugger 
        matrix1_letter_index_dff.d = b00001;
        matrix2_letter_index_dff.d = b00001;
        matrix3_letter_index_dff.d = b00001;
        matrix4_letter_index_dff.d = b00001; 
      
    }
  
}
