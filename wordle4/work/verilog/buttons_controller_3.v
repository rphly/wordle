/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module buttons_controller_3 (
    input clk,
    input rst,
    input a,
    input e,
    input i,
    input l,
    input n,
    input o,
    input p,
    input s,
    input t,
    output reg is_pressed,
    output reg [15:0] out
  );
  
  
  
  wire [1-1:0] M_a__out;
  button_11 a_ (
    .clk(clk),
    .button_input(a),
    .out(M_a__out)
  );
  wire [1-1:0] M_e__out;
  button_11 e_ (
    .clk(clk),
    .button_input(e),
    .out(M_e__out)
  );
  wire [1-1:0] M_i__out;
  button_11 i_ (
    .clk(clk),
    .button_input(i),
    .out(M_i__out)
  );
  wire [1-1:0] M_l__out;
  button_11 l_ (
    .clk(clk),
    .button_input(l),
    .out(M_l__out)
  );
  wire [1-1:0] M_n__out;
  button_11 n_ (
    .clk(clk),
    .button_input(n),
    .out(M_n__out)
  );
  wire [1-1:0] M_o__out;
  button_11 o_ (
    .clk(clk),
    .button_input(o),
    .out(M_o__out)
  );
  wire [1-1:0] M_p__out;
  button_11 p_ (
    .clk(clk),
    .button_input(p),
    .out(M_p__out)
  );
  wire [1-1:0] M_s__out;
  button_11 s_ (
    .clk(clk),
    .button_input(s),
    .out(M_s__out)
  );
  wire [1-1:0] M_t__out;
  button_11 t_ (
    .clk(clk),
    .button_input(t),
    .out(M_t__out)
  );
  
  always @* begin
    if (M_a__out) begin
      out = 1'h1;
      is_pressed = 1'h1;
    end else begin
      if (M_e__out) begin
        out = 3'h5;
        is_pressed = 1'h1;
      end else begin
        if (M_i__out) begin
          out = 4'h9;
          is_pressed = 1'h1;
        end else begin
          if (M_l__out) begin
            out = 4'hc;
            is_pressed = 1'h1;
          end else begin
            if (M_n__out) begin
              out = 4'he;
              is_pressed = 1'h1;
            end else begin
              if (M_o__out) begin
                out = 4'hf;
                is_pressed = 1'h1;
              end else begin
                if (M_p__out) begin
                  out = 5'h10;
                  is_pressed = 1'h1;
                end else begin
                  if (M_s__out) begin
                    out = 5'h13;
                    is_pressed = 1'h1;
                  end else begin
                    if (M_t__out) begin
                      out = 5'h14;
                      is_pressed = 1'h1;
                    end else begin
                      out = 16'h0000;
                      is_pressed = 1'h0;
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
endmodule
