/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module matrix_controller_8 (
    input clk,
    input rst,
    input [2:0] update,
    input [6:0] matrix1_letter_index,
    input [6:0] matrix2_letter_index,
    input [6:0] matrix3_letter_index,
    input [6:0] matrix4_letter_index,
    output reg outmatrix1,
    output reg outmatrix2,
    output reg outmatrix3,
    output reg outmatrix4
  );
  
  
  
  reg [6:0] M_matrix1_letter_index_dff_d, M_matrix1_letter_index_dff_q = 1'h0;
  reg [6:0] M_matrix2_letter_index_dff_d, M_matrix2_letter_index_dff_q = 1'h0;
  reg [6:0] M_matrix3_letter_index_dff_d, M_matrix3_letter_index_dff_q = 1'h0;
  reg [6:0] M_matrix4_letter_index_dff_d, M_matrix4_letter_index_dff_q = 1'h0;
  wire [1-1:0] M_matrix1_data_out;
<<<<<<< HEAD
  reg [7-1:0] M_matrix1_letter_index;
  matrix_15 matrix1 (
=======
  reg [5-1:0] M_matrix1_letter_address;
  matrix_16 matrix1 (
>>>>>>> 81d1d9559e6e53b259c73dd88862c923e336802b
    .clk(clk),
    .rst(rst),
    .letter_index(M_matrix1_letter_index),
    .data_out(M_matrix1_data_out)
  );
  wire [1-1:0] M_matrix2_data_out;
<<<<<<< HEAD
  reg [7-1:0] M_matrix2_letter_index;
  matrix_15 matrix2 (
=======
  reg [5-1:0] M_matrix2_letter_address;
  matrix_16 matrix2 (
>>>>>>> 81d1d9559e6e53b259c73dd88862c923e336802b
    .clk(clk),
    .rst(rst),
    .letter_index(M_matrix2_letter_index),
    .data_out(M_matrix2_data_out)
  );
  wire [1-1:0] M_matrix3_data_out;
<<<<<<< HEAD
  reg [7-1:0] M_matrix3_letter_index;
  matrix_15 matrix3 (
=======
  reg [5-1:0] M_matrix3_letter_address;
  matrix_16 matrix3 (
>>>>>>> 81d1d9559e6e53b259c73dd88862c923e336802b
    .clk(clk),
    .rst(rst),
    .letter_index(M_matrix3_letter_index),
    .data_out(M_matrix3_data_out)
  );
  wire [1-1:0] M_matrix4_data_out;
<<<<<<< HEAD
  reg [7-1:0] M_matrix4_letter_index;
  matrix_15 matrix4 (
=======
  reg [5-1:0] M_matrix4_letter_address;
  matrix_16 matrix4 (
>>>>>>> 81d1d9559e6e53b259c73dd88862c923e336802b
    .clk(clk),
    .rst(rst),
    .letter_index(M_matrix4_letter_index),
    .data_out(M_matrix4_data_out)
  );
  
  always @* begin
    M_matrix1_letter_index_dff_d = M_matrix1_letter_index_dff_q;
    M_matrix4_letter_index_dff_d = M_matrix4_letter_index_dff_q;
    M_matrix3_letter_index_dff_d = M_matrix3_letter_index_dff_q;
    M_matrix2_letter_index_dff_d = M_matrix2_letter_index_dff_q;
    
    outmatrix1 = M_matrix1_data_out;
    outmatrix2 = M_matrix2_data_out;
    outmatrix3 = M_matrix3_data_out;
    outmatrix4 = M_matrix4_data_out;
    M_matrix1_letter_index = M_matrix1_letter_index_dff_q;
    M_matrix2_letter_index = M_matrix2_letter_index_dff_q;
    M_matrix3_letter_index = M_matrix3_letter_index_dff_q;
    M_matrix4_letter_index = M_matrix4_letter_index_dff_q;
    
    case (update)
      3'h1: begin
        M_matrix1_letter_index_dff_d = matrix1_letter_index;
      end
      3'h2: begin
        M_matrix2_letter_index_dff_d = matrix2_letter_index;
      end
      3'h3: begin
        M_matrix3_letter_index_dff_d = matrix3_letter_index;
      end
      3'h4: begin
        M_matrix4_letter_index_dff_d = matrix4_letter_index;
      end
      3'h5: begin
        M_matrix1_letter_index_dff_d = 5'h00;
        M_matrix2_letter_index_dff_d = 5'h00;
        M_matrix3_letter_index_dff_d = 5'h00;
        M_matrix4_letter_index_dff_d = 5'h00;
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_matrix1_letter_index_dff_q <= M_matrix1_letter_index_dff_d;
    M_matrix2_letter_index_dff_q <= M_matrix2_letter_index_dff_d;
    M_matrix3_letter_index_dff_q <= M_matrix3_letter_index_dff_d;
    M_matrix4_letter_index_dff_q <= M_matrix4_letter_index_dff_d;
  end
  
endmodule
