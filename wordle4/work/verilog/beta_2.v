/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module beta_2 (
    input clk,
    input rst,
    input write_one_button_in,
    input write_zero_button_in,
    input read_button_in,
    output reg which_matrix,
    output reg which_letter
  );
  
  
  
  wire [1-1:0] M_control_unit_which_matrix;
  wire [1-1:0] M_control_unit_which_letter;
  wire [1-1:0] M_control_unit_regfile_we;
  wire [16-1:0] M_control_unit_regfile_write_address;
  wire [16-1:0] M_control_unit_regfile_ra;
  wire [16-1:0] M_control_unit_regfile_rb;
  wire [16-1:0] M_control_unit_regfile_data;
  wire [1-1:0] M_control_unit_current_state;
  reg [16-1:0] M_control_unit_regfile_out_a;
  reg [16-1:0] M_control_unit_regfile_out_b;
  reg [1-1:0] M_control_unit_write_one_in;
  reg [1-1:0] M_control_unit_write_zero_in;
  reg [1-1:0] M_control_unit_read_button_in;
  game_6 control_unit (
    .clk(clk),
    .rst(rst),
    .regfile_out_a(M_control_unit_regfile_out_a),
    .regfile_out_b(M_control_unit_regfile_out_b),
    .write_one_in(M_control_unit_write_one_in),
    .write_zero_in(M_control_unit_write_zero_in),
    .read_button_in(M_control_unit_read_button_in),
    .which_matrix(M_control_unit_which_matrix),
    .which_letter(M_control_unit_which_letter),
    .regfile_we(M_control_unit_regfile_we),
    .regfile_write_address(M_control_unit_regfile_write_address),
    .regfile_ra(M_control_unit_regfile_ra),
    .regfile_rb(M_control_unit_regfile_rb),
    .regfile_data(M_control_unit_regfile_data),
    .current_state(M_control_unit_current_state)
  );
  wire [16-1:0] M_r_out_a;
  wire [16-1:0] M_r_out_b;
  reg [5-1:0] M_r_write_address;
  reg [1-1:0] M_r_we;
  reg [16-1:0] M_r_data;
  reg [5-1:0] M_r_read_address_a;
  reg [5-1:0] M_r_read_address_b;
  regfile_7 r (
    .clk(clk),
    .rst(rst),
    .write_address(M_r_write_address),
    .we(M_r_we),
    .data(M_r_data),
    .read_address_a(M_r_read_address_a),
    .read_address_b(M_r_read_address_b),
    .out_a(M_r_out_a),
    .out_b(M_r_out_b)
  );
  
  always @* begin
    M_r_we = M_control_unit_regfile_we;
    M_r_write_address = M_control_unit_regfile_write_address;
    M_r_read_address_a = M_control_unit_regfile_ra;
    M_r_read_address_b = M_control_unit_regfile_rb;
    M_r_data = M_control_unit_regfile_data;
    M_control_unit_read_button_in = read_button_in;
    M_control_unit_write_one_in = write_one_button_in;
    M_control_unit_write_zero_in = write_zero_button_in;
    M_control_unit_regfile_out_a = M_r_out_a;
    M_control_unit_regfile_out_b = M_r_out_b;
    which_matrix = M_control_unit_which_matrix;
    which_letter = M_control_unit_which_letter;
  end
endmodule
