/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module panel_controller_5 (
    input clk,
    input rst,
    input clear,
    input check,
    input reset,
    input oka,
    input guess_1_btn,
    input guess_2_btn,
    input guess_3_btn,
    input guess_4_btn,
    output reg is_pressed,
    output reg [15:0] out
  );
  
  
  
  wire [1-1:0] M_clear__out;
  button_12 clear_ (
    .clk(clk),
    .button_input(clear),
    .out(M_clear__out)
  );
  wire [1-1:0] M_check__out;
  button_12 check_ (
    .clk(clk),
    .button_input(check),
    .out(M_check__out)
  );
  wire [1-1:0] M_oka__out;
  button_12 oka_ (
    .clk(clk),
    .button_input(oka),
    .out(M_oka__out)
  );
  wire [1-1:0] M_reset__out;
  button_12 reset_ (
    .clk(clk),
    .button_input(reset),
    .out(M_reset__out)
  );
  wire [1-1:0] M_guess1_out;
  button_12 guess1 (
    .clk(clk),
    .button_input(guess_1_btn),
    .out(M_guess1_out)
  );
  wire [1-1:0] M_guess2_out;
  button_12 guess2 (
    .clk(clk),
    .button_input(guess_2_btn),
    .out(M_guess2_out)
  );
  wire [1-1:0] M_guess3_out;
  button_12 guess3 (
    .clk(clk),
    .button_input(guess_3_btn),
    .out(M_guess3_out)
  );
  wire [1-1:0] M_guess4_out;
  button_12 guess4 (
    .clk(clk),
    .button_input(guess_4_btn),
    .out(M_guess4_out)
  );
  
  always @* begin
    if (M_guess1_out) begin
      out = 5'h01;
      is_pressed = 1'h1;
    end else begin
      if (M_guess2_out) begin
        out = 5'h04;
        is_pressed = 1'h1;
      end else begin
        if (M_guess3_out) begin
          out = 5'h08;
          is_pressed = 1'h1;
        end else begin
          if (M_guess4_out) begin
            out = 5'h0c;
            is_pressed = 1'h1;
          end else begin
            if (M_reset__out) begin
              out = 5'h15;
              is_pressed = 1'h1;
            end else begin
              if (M_oka__out) begin
                out = 6'h24;
                is_pressed = 1'h1;
              end else begin
                if (M_clear__out) begin
                  out = 5'h1f;
                  is_pressed = 1'h1;
                end else begin
                  if (M_check__out) begin
                    out = 5'h1e;
                    is_pressed = 1'h1;
                  end else begin
                    if (M_reset__out) begin
                      out = 5'h15;
                      is_pressed = 1'h1;
                    end else begin
                      out = 5'h00;
                      is_pressed = 1'h0;
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
endmodule
