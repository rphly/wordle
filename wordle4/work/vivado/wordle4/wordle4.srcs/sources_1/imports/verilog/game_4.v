/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_4 (
    input clk,
    input rst,
    input [15:0] regfile_out_a,
    input [15:0] regfile_out_b,
    input write_one_in,
    input write_zero_in,
    input read_button_in,
    output reg [4:0] which_matrix,
    output reg [4:0] which_letter,
    output reg regfile_we,
    output reg [15:0] regfile_write_address,
    output reg [15:0] regfile_ra,
    output reg [15:0] regfile_rb,
    output reg [15:0] regfile_data,
    output reg [1:0] current_state,
    output reg [2:0] matrix_controller_update,
    output reg [4:0] bottom_matrix1_letter_address,
    output reg [4:0] bottom_matrix2_letter_address,
    output reg [4:0] bottom_matrix3_letter_address,
    output reg [4:0] bottom_matrix4_letter_address
  );
  
  
  
  localparam IDLE_game_fsm = 3'd0;
  localparam STORE_INPUT_game_fsm = 3'd1;
  localparam UPDATE_MATRIX_game_fsm = 3'd2;
  localparam STORE_ONE_game_fsm = 3'd3;
  localparam STORE_ZERO_game_fsm = 3'd4;
  
  reg [2:0] M_game_fsm_d, M_game_fsm_q = IDLE_game_fsm;
  
  localparam INPUT_CTR = 5'h1c;
  
  localparam INPUT_LETTER_1 = 5'h10;
  
  always @* begin
    M_game_fsm_d = M_game_fsm_q;
    
    regfile_we = 1'h0;
    regfile_write_address = 1'h0;
    regfile_ra = 1'h0;
    regfile_rb = 1'h0;
    regfile_data = 2'h2;
    which_matrix = 5'h00;
    which_letter = 5'h00;
    current_state = 2'h0;
    matrix_controller_update = 1'h0;
    bottom_matrix1_letter_address = 5'h00;
    bottom_matrix2_letter_address = 5'h00;
    bottom_matrix3_letter_address = 5'h00;
    bottom_matrix4_letter_address = 5'h00;
    if (rst) begin
      M_game_fsm_d = IDLE_game_fsm;
    end else begin
      
      case (M_game_fsm_q)
        IDLE_game_fsm: begin
          if (write_zero_in) begin
            M_game_fsm_d = STORE_ZERO_game_fsm;
          end
          if (write_one_in) begin
            M_game_fsm_d = STORE_ONE_game_fsm;
          end
          if (read_button_in) begin
            M_game_fsm_d = UPDATE_MATRIX_game_fsm;
          end
        end
        STORE_ONE_game_fsm: begin
          regfile_we = 1'h1;
          regfile_write_address = 5'h10;
          regfile_ra = 16'h0000;
          regfile_rb = 16'h0000;
          regfile_data = 16'h0001;
          current_state = 2'h1;
          M_game_fsm_d = IDLE_game_fsm;
        end
        STORE_ZERO_game_fsm: begin
          regfile_we = 1'h1;
          regfile_write_address = 5'h10;
          regfile_ra = 1'h0;
          regfile_rb = 1'h0;
          regfile_data = 1'h0;
          current_state = 2'h2;
          M_game_fsm_d = IDLE_game_fsm;
        end
        UPDATE_MATRIX_game_fsm: begin
          regfile_we = 1'h0;
          regfile_ra = 5'h10;
          regfile_rb = 5'h1c;
          
          case (regfile_out_b)
            1'h0: begin
              matrix_controller_update = 3'h1;
              bottom_matrix1_letter_address = regfile_out_a;
            end
            1'h1: begin
              matrix_controller_update = 3'h2;
              bottom_matrix2_letter_address = regfile_out_a;
            end
            2'h2: begin
              matrix_controller_update = 3'h3;
              bottom_matrix2_letter_address = regfile_out_a;
            end
            2'h3: begin
              matrix_controller_update = 3'h4;
              bottom_matrix2_letter_address = regfile_out_a;
            end
          endcase
          M_game_fsm_d = IDLE_game_fsm;
        end
        default: begin
          M_game_fsm_d = IDLE_game_fsm;
        end
      endcase
    end
  end
  
  always @(posedge clk) begin
    M_game_fsm_q <= M_game_fsm_d;
  end
  
endmodule
