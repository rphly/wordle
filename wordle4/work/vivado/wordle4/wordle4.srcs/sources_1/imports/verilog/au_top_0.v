/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    input usb_rx,
    input btnin,
    output reg usb_tx,
    output reg [23:0] io_led
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_btn_controller_is_pressed;
  wire [1-1:0] M_btn_controller_out;
  buttons_controller_2 btn_controller (
    .clk(clk),
    .aIn(btnin),
    .rst(rst),
    .is_pressed(M_btn_controller_is_pressed),
    .out(M_btn_controller_out)
  );
  reg [1-1:0] M_g_btn_is_pressed;
  reg [1-1:0] M_g_btn_input;
  game_3 g (
    .clk(clk),
    .rst(rst),
    .btn_is_pressed(M_g_btn_is_pressed),
    .btn_input(M_g_btn_input)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    io_led = 24'h000000;
    if (rst == 1'h1) begin
      io_led[0+0+7-:8] = 8'hff;
    end
    if (M_btn_controller_is_pressed == 1'h1) begin
      io_led[8+0+7-:8] = 8'hff;
    end
    usb_tx = usb_rx;
    M_g_btn_is_pressed = M_btn_controller_is_pressed;
    M_g_btn_input = M_btn_controller_out;
  end
endmodule
