/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    input usb_rx,
    input [1:0] alphabet,
    input [3:0] recall_button,
    input clear,
    input check_button,
    output reg top_display1,
    output reg bot_display1,
    output reg [23:0] io_led,
    output reg usb_tx
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [4-1:0] M_betaCPU_display_top;
  wire [4-1:0] M_betaCPU_display_bot;
  reg [1-1:0] M_betaCPU_check_button;
  reg [2-1:0] M_betaCPU_alphabet_button;
  reg [1-1:0] M_betaCPU_clear;
  reg [4-1:0] M_betaCPU_recall;
  reg [1-1:0] M_betaCPU_is_pressed;
  game_beta_backup_2 betaCPU (
    .clk(clk),
    .rst(rst),
    .check_button(M_betaCPU_check_button),
    .alphabet_button(M_betaCPU_alphabet_button),
    .clear(M_betaCPU_clear),
    .recall(M_betaCPU_recall),
    .is_pressed(M_betaCPU_is_pressed),
    .display_top(M_betaCPU_display_top),
    .display_bot(M_betaCPU_display_bot)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    io_led = 24'h000000;
    M_betaCPU_recall = recall_button;
    M_betaCPU_clear = clear;
    M_betaCPU_alphabet_button = alphabet;
    M_betaCPU_check_button = check_button;
    if (alphabet) begin
      M_betaCPU_is_pressed = 1'h1;
    end else begin
      M_betaCPU_is_pressed = 1'h0;
    end
    top_display1 = M_betaCPU_display_top[0+0-:1];
    bot_display1 = M_betaCPU_display_bot[0+0-:1];
  end
endmodule
