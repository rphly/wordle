/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    input usb_rx,
    input a_in,
    input b_in,
    input c_in,
    input clear_in,
    output reg outmatrix0,
    output reg [23:0] io_led,
    output reg usb_tx
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [5-1:0] M_betaCPU_which_matrix;
  wire [5-1:0] M_betaCPU_which_letter;
  wire [2-1:0] M_betaCPU_current_state;
  reg [1-1:0] M_betaCPU_has_keyboard_input;
  reg [5-1:0] M_betaCPU_keyboard_input;
  reg [5-1:0] M_betaCPU_panel_input;
  reg [1-1:0] M_betaCPU_has_panel_input;
  beta_2 betaCPU (
    .clk(clk),
    .rst(rst),
    .has_keyboard_input(M_betaCPU_has_keyboard_input),
    .keyboard_input(M_betaCPU_keyboard_input),
    .panel_input(M_betaCPU_panel_input),
    .has_panel_input(M_betaCPU_has_panel_input),
    .which_matrix(M_betaCPU_which_matrix),
    .which_letter(M_betaCPU_which_letter),
    .current_state(M_betaCPU_current_state)
  );
  wire [1-1:0] M_keyboard_controller_is_pressed;
  wire [16-1:0] M_keyboard_controller_out;
  buttons_controller_3 keyboard_controller (
    .clk(clk),
    .rst(rst),
    .a(a_in),
    .is_pressed(M_keyboard_controller_is_pressed),
    .out(M_keyboard_controller_out)
  );
  wire [1-1:0] M_button_panel_controller_is_pressed;
  wire [5-1:0] M_button_panel_controller_out;
  panel_controller_4 button_panel_controller (
    .clk(clk),
    .rst(rst),
    .clear(clear_in),
    .is_pressed(M_button_panel_controller_is_pressed),
    .out(M_button_panel_controller_out)
  );
  
  wire [5-1:0] M_led_strip_pixel;
  wire [1-1:0] M_led_strip_led;
  reg [1-1:0] M_led_strip_update;
  reg [24-1:0] M_led_strip_color;
  led_strip_writer_5 led_strip (
    .clk(clk),
    .rst(rst),
    .update(M_led_strip_update),
    .color(M_led_strip_color),
    .pixel(M_led_strip_pixel),
    .led(M_led_strip_led)
  );
  
  wire [600-1:0] M_letters_out;
  reg [5-1:0] M_letters_selector;
  white_alphabets_6 letters (
    .selector(M_letters_selector),
    .out(M_letters_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    io_led = 24'h000000;
    M_betaCPU_keyboard_input = M_keyboard_controller_out;
    M_betaCPU_has_keyboard_input = M_keyboard_controller_is_pressed;
    M_betaCPU_panel_input = M_button_panel_controller_out;
    M_betaCPU_has_panel_input = M_button_panel_controller_is_pressed;
    M_letters_selector = M_betaCPU_which_letter;
    M_led_strip_update = 1'h1;
    M_led_strip_color = M_letters_out[(M_led_strip_pixel)*24+23-:24];
    outmatrix0 = M_led_strip_led;
    usb_tx = usb_rx;
  end
endmodule
